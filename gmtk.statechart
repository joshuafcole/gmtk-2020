import "./parts/std/std.statechart"

App*
    on state.enter
        _: lib.start_ticking()

        add NeuralScreen
            @name: "Motor"

            // Transform*
            //     @ox: "right"
            //     @oy: "50%"
            //     @x: -450
            //     @y: -350
            //     @z: -375
            //     @r: 10

            Transform*
                @ox: "right"
                @x: -400
                @y: -500
                @z: -300
                @r: 15

            Neuron
                Nucleus*
                    @x: 50
                    @y: 200
                Terminal*
                    @x: 800
                    @y: 50

                Type!*
                    Motor*

            Neuron
                Nucleus*
                    @x: 400
                    @y: 425
                Terminal*
                    @x: 100
                    @y: 600

                Type!*
                    Motor*

                Out*
                    @action: "move_leg"
                    @delay: 500

                Label*
                    @content: "leg"
                    @p: 0.25
                    @side: 1

        add NeuralScreen
            @name: "Logic"

            Transform*
                @ox: "left"
                @oy: "50%"
                @x: -200
                @y: -350
                @z: -500
                @r: 2

            Neuron
                Nucleus*
                    @x: 950
                    @y: 400
                Terminal*
                    @x: 1050
                    @y: 550

                Type!*
                    Logic*

            Neuron
                Nucleus*
                    @x: 1100
                    @y: 650
                Terminal*
                    @x: 700
                    @y: 650

            Neuron
                Nucleus*
                    @x: 750
                    @y: 550
                Terminal*
                    @x: 850
                    @y: 400


        add NeuralScreen
            @name: "Language"

            Transform*
                @ox: "right"
                @oy: "50%"
                @x: 0
                @y: -400
                @z: -650
                @r: -4

            Neuron
                Nucleus*
                    @x: 575
                    @y: 425
                Terminal*
                    @x: 650
                    @y: 800

                Type!*
                    Language*
                        @phoneme: "th"

                    Label*
                        @content: "'TH'"
                        @p: 0.33
                        @side: 1

        add NeuralScreen
            @name: "Memory"

            Neuron
                Nucleus*
                    @x: 300
                    @y: 300
                Terminal*
                    @x: 325
                    @y: 350

                Type!*
                    Memory*
                        @icon: "cog fas"

                        Thought
                            @content: "I wonder how many gears Big Ben contains..."

            Neuron
                Nucleus*
                    @x: 750
                    @y: 125
                Terminal*
                    @x: 500
                    @y: 400

                Type!*
                    Memory*
                        @icon: "feather fas"
                        Thought
                            @content: "Is a ton of feathers really not lighter than a ton of bricks?"
                        Thought
                            @content: "I mean, it makes sense, but..."

    interface
        app
            screen-layer
                draw NeuralScreen


    import "./parts/neuron/neuron.statechart"
    import "./parts/scene/scene.statechart"

    NeuralScreen[]
        @name: ""
        interface
            _window: lib.window_size()
            _view: lib.exclusive.dashed_name(View)
            neural-screen-wrapper(class="{{_view}} {{@name}}", style=@Transform.string)
                neural-screen-inner
                    svg.neural-screen(svg=true, postRender=lib.resize_svg, w=_window.width, h=_window.height)
                        draw Neuron

        Transform*
            @ox: "left"
            @oy: "50%"
            @x: 0
            @y: 0
            @z: 0
            @r: 0

            bind @string: "--tx: {{@x}}px; --ty: {{@y}}px; --tz: {{@z}}px; --tr: {{@r}}deg"

        View!*
            Mini*
                on NeuralScreen.mouse.click -> Focused

            Focused
                on NeuralScreen.mouse.RMB -> Mini

        Neuron[] :: App.Neuron

SVGDefs*
    interface
        svg.defs(svg=true, style="width: 0; height: 0")
            draw GooFilter

    GooFilter*
        interface
            filter(svg=true, id="goo")
                feGaussianBlur(svg=true, in="SourceGraphic", stdDeviation="10", result="blur")
                feColorMatrix(svg=true, in="blur", type="matrix", values="1 0 0 0 0  0 1 0 0 0  0 0 1 0 0  0 0 0 18 -7", result="goo")
                feBlend(svg=true, in="goo", in2="SourceGraphic")

import "./parts/editor/editor.statechart"
