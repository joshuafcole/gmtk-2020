Editor*
    interface
        editor(class=lib.exclusive.dashed_name(State))
            draw State.Enabled

    State!*
        Disabled*
            on any.keyboard.down (event.mod.alt && event.key == "E") -> Enabled
        Enabled
            on state.enter
                reference Dialog.ActiveMessage in HeldMessage
                dereference Dialog.ActiveMessage in Dialog.ActiveMessage

            on state.leave
                reference HeldMessage in Dialog.ActiveMessage
                dereference HeldMessage in HeldMessage

            on any.keyboard.down (event.mod.alt && event.key == "E") -> Disabled

            on NeuralScreen.mouse.RMB (!lib.in(Interaction.Adding)) -> Disabled

            on any.keyboard.down (event.mod.control && event.key == "s")
                _: lib.editor.save_focused(App, event.prevent)

            interface
                editor-content
                    editing-notice
                        i.fas.fa-edit
                        draw Tool

                    draw Interaction.Editing.Properties

            HeldMessage references Dialog.Message

            Tool!*
                on any.keyboard.down (event.key == "N") -> Normal
                on any.keyboard.down (event.key == "M") -> Motor
                on any.keyboard.down (event.key == "L") -> Logic
                on any.keyboard.down (event.key == "P") -> Language
                on any.keyboard.down (event.key == "T") -> Memory

                interface
                    tool-wrapper
                        draw Add

                Add!*
                    Normal*
                        interface
                            i.fas.fa-code-branch.tool-icon
                    Motor
                        interface
                            i.fas.fa-cogs.tool-icon
                    Logic
                        interface
                            i.fas.fa-square-root-alt.tool-icon
                    Language
                        interface
                            i.far.fa-comment-dots.tool-icon
                    Memory
                        interface
                            i.fas.fa-sd-card.tool-icon

            Interaction!*
                @off_x: 0
                @off_y: 0

                None*
                    on NeuralScreen.mouse.down (event.button == 0 && lib.in(Tool.Add)) -> Adding
                        _bounds: lib.get_bounds(lib.editor.nth_child(event.node, 1))
                        _x: event.view_x - _bounds.left
                        _y: event.view_y - _bounds.top
                        @off_x: _bounds.left
                        @off_y: _bounds.top
                        add Neuron (_n)
                            Nucleus*
                                @x: _x
                                @y: _y
                            Terminal*
                                @x: _x
                                @y: _y

                        reference _n in AddingNeuron
                        _: lib.editor.convert_to(Neuron, Enabled.Tool.Add)


                    on Neuron.mouse.down -> Editing
                        send select to Editor
                            neuron: Neuron

                    on Neuron.Nucleus.mouse.down -> Editing
                        send select to Editor
                            neuron: Neuron

                    on Neuron.Terminal.mouse.down -> Editing
                        send select to Editor
                            neuron: Neuron

                Adding
                    AddingNeuron references NeuralScreen.Neuron

                    on any.mouse.down (event.button == 0) -> None
                        dereference AddingNeuron in AddingNeuron

                    on any.mouse.move
                        @AddingNeuron.Terminal.x: event.view_x - @off_x
                        @AddingNeuron.Terminal.y: event.view_y - @off_y

                    on any.mouse.move (lib.in(AddingNeuron.Type.Logic))
                        _x2: @AddingNeuron.Terminal.x
                        _y2: @AddingNeuron.Terminal.y
                        _x1: @AddingNeuron.Nucleus.x
                        _y1: @AddingNeuron.Nucleus.y
                        @AddingNeuron.Type.Logic.theta: Math.atan2(_y2 - _y1, _x2 - _x1)
                        @AddingNeuron.Type.Logic.base_length: Math.hypot(_y2 - _y1, _x2 - _x1)

                    on NeuralScreen.mouse.RMB -> None
                        remove AddingNeuron
                        dereference AddingNeuron in AddingNeuron

                Editing
                    on NeuralScreen.mouse.down -> None

                    on Editor.select
                        reference event.neuron in SelectedNeuron

                    on Neuron.mouse.down
                        send select to Editor
                            neuron: Neuron

                    on Neuron.Nucleus.mouse.down
                        send select to Editor
                            neuron: Neuron

                    on Neuron.Terminal.mouse.down
                        send select to Editor
                            neuron: Neuron

                    on any.keyboard.down (event.key == "Delete") -> None
                        remove SelectedNeuron

                    SelectedNeuron references Neuron

                    Properties*
                        on add_label
                            _: lib.editor.label(SelectedNeuron, "", 0.33)

                        on add_out
                            _: lib.editor.out(SelectedNeuron, "", 100)

                        interface
                            editor-properties
                                if lib.in(SelectedNeuron.Label)
                                    draw SelectedNeuron.Label.Properties
                                else
                                    property-grid
                                        h3 Label
                                        button(click="add_label")
                                            i.fas.fa-plus
                                if lib.in(SelectedNeuron.Out)
                                    draw SelectedNeuron.Out.Properties
                                else
                                    property-grid
                                        h3 Out
                                        button(click="add_out")
                                            i.fas.fa-plus
                                draw SelectedNeuron.Type.Motor.Properties
                                draw SelectedNeuron.Type.Logic.Properties
                                draw SelectedNeuron.Type.Memory.Properties
                                draw SelectedNeuron.Type.Language.Properties
