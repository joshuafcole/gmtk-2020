Neuron[]
    interface
        g.neuron(svg=true)
            g.neuron-inner(svg=true)
                draw Axon
                draw Nucleus
                draw Terminal
                draw Pulse
            draw Label

    Nucleus*
        @x: 0
        @y: 0

        on (lib.changed(@x, @y))
            send redraw to Axon

        on mouse.click
            add Pulse

        interface
            g.nucleus(svg=true)
                circle(svg=true, cx=@x, cy=@y, r=30)

    Axon*
        @path: ""

        on redraw
            @path: lib.neuron.axon.path(Neuron)

        interface
            g.axon(svg=true)
                path(svg=true, d=@path)

    Terminal*
        @x: 0
        @y: 0

        on (lib.changed(@x, @y))
            send redraw to Axon

        interface
            g.terminal(svg=true)
                circle(svg=true, cx=@x, cy=@y, r=30)

    Out
        @action: ""
        @delay: 100

    Label
        @content: ""
        @p: 0
        @side: 0

        interface
            _pos: lib.neuron.axon.position(@p, Neuron)
            _deg: Math.round(lib.neuron.axon.angle(Neuron) * 180 / lib.PI()) + 90 - @side * 180
            _transform: "rotate({{_deg}}, {{_pos.x}}, {{_pos.y}})"
            g.label(svg=true)
                rect.tape(svg=true, x=_pos.x - 6, y = _pos.y - 15, width=100, height=30, transform=_transform)
                text(svg=true, x=_pos.x + 10, y=_pos.y, transform=_transform) {{@content}}

    Pulse[]
        @p: 0
        @speed: 10

        on tick
            @p: @p + @speed / lib.neuron.axon.length(Neuron)

        // Outputs
        on tick (@p >= 1 && lib.in(Neuron.Out))
            _: lib.wait(@Neuron.Out.delay, @Neuron.Out.action)

        on tick (@p >= 1)
            _: lib.neuron.pulse.propagate(Pulse, Neuron, App)
            remove Pulse

        interface
            _pos: lib.neuron.axon.position(@p, Neuron)
            _deg: lib.neuron.axon.angle(Neuron) * 180 / lib.PI()
            _transform: "rotate({{_deg}}, {{_pos.x}}, {{_pos.y}})"
            ellipse.pulse(svg=true, cx=_pos.x, cy=_pos.y, rx=15, ry=10, transform=_transform)
